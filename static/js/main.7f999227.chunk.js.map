{"version":3,"sources":["components/Input/Input.module.css","components/Filter/Filter.module.css","components/ItemsList/ItemsList.module.css","constants/InputFieldList.js","components/Input/Input.jsx","containers/InputContainer.jsx","actions/actions.js","constants/actionsType.js","components/Filter/Filter.jsx","containers/FilterContainer.jsx","components/ItemsList/Item/Item.jsx","components/ItemsList/ItemsList.jsx","containers/ItemsListContainer.jsx","App.js","store/initialState.js","reducers/rootReducer.js","store/configureStore.js","index.js","components/ItemsList/Item/Item.module.css"],"names":["module","exports","inputFieldList","author","name","title","value","genre","description","Input","state","fields","handleChange","target","setState","prev","trimStart","isEmptyFields","fieldValues","Object","values","key","handleClick","onAddNewItem","props","this","onClearStore","className","styles","block","map","type","onChange","input","placeholder","onClick","button","PureComponent","InputContainer","Component","connect","payload","Filter","onChangeFilter","filter","FilterContainer","Item","isEdit","handleClickEditButton","handleClickDeleteButton","onRemoveItem","id","handleClickSaveButton","onChangeItemValue","textBlock","inputBlock","isViewComponent","componentsData","string","filterWords","split","includes","ItemsList","itemsList","ItemsListContainer","App","initialState","JSON","parse","localStorage","getItem","store","createStore","action","newItemList","Date","now","setItem","stringify","clear","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f999227.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Input_block__VM5Yf\",\"button\":\"Input_button__2WPix\",\"input\":\"Input_input__2go64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2ybTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ItemsList_block__1lGXS\"};","export const inputFieldList = {\r\n  author: {\r\n    name: \"author\",\r\n    title: \"автор\",\r\n    value: \"\"\r\n  },\r\n  name: {\r\n    name: \"name\",\r\n    title: \"название\",\r\n    value: \"\"\r\n  },\r\n  genre: {\r\n    name: \"genre\",\r\n    title: \"жанр\",\r\n    value: \"\"\r\n  },\r\n\r\n  description: {\r\n    name: \"description\",\r\n    title: \"описание\",\r\n    value: \"\"\r\n  }\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport styles from \"./Input.module.css\";\r\nimport { inputFieldList } from \"../../constants/InputFieldList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Input extends PureComponent {\r\n  state = {\r\n    fields: inputFieldList\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState(prev => ({\r\n      fields: {\r\n        ...prev.fields,\r\n        [name]: {\r\n          ...prev.fields[name],\r\n          value: value.trimStart()\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  isEmptyFields = () => {\r\n    const { fields } = this.state;\r\n    const fieldValues = Object.values(fields);\r\n    for (let key in fieldValues) {\r\n      if (fieldValues[key].value === \"\") return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { fields } = this.state;\r\n    const { onAddNewItem } = this.props;\r\n    if (this.isEmptyFields()) {\r\n      return;\r\n    } else {\r\n      onAddNewItem({ ...fields });\r\n      this.setState({\r\n        fields: inputFieldList\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fields } = this.state;\r\n    const { onClearStore } = this.props;\r\n    return (\r\n      <div className={styles.block}>\r\n        {Object.values(fields).map(value => (\r\n          <input\r\n            key={value.name}\r\n            type=\"text\"\r\n            value={value.value}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n            placeholder={value.title}\r\n            name={value.name}\r\n          />\r\n        ))}\r\n        <button onClick={this.handleClick} className={styles.button}>\r\n          Добавить\r\n        </button>\r\n        <button onClick={onClearStore} className={styles.button}>\r\n          Очистить\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  onAddNewItem: PropTypes.func,\r\n  onClearStore: PropTypes.func\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Input from \"../components/Input/\";\r\nimport { addNewItemAction, clearStoreAction } from \"../actions/\";\r\n\r\nexport class InputContainer extends Component {\r\n  render() {\r\n    return <Input {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { onAddNewItem: addNewItemAction, onClearStore: clearStoreAction }\r\n)(InputContainer);\r\n","import {\r\n  ADD_NEW_ITEM,\r\n  REMOVE_ITEM,\r\n  CHANGE_FILTER,\r\n  EDIT_ITEM,\r\n  CLEAR_STORE\r\n} from \"../constants/actionsType\";\r\n\r\nexport const addNewItemAction = value => ({\r\n  type: ADD_NEW_ITEM,\r\n  payload: value\r\n});\r\n\r\nexport const removeItemAction = value => ({\r\n  type: REMOVE_ITEM,\r\n  payload: value\r\n});\r\n\r\nexport const changeFilterAction = value => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value\r\n});\r\n\r\nexport const changeItemValueAction = (value, id) => ({\r\n  type: EDIT_ITEM,\r\n  payload: {\r\n    value,\r\n    id\r\n  }\r\n});\r\n\r\nexport const clearStoreAction = () => ({\r\n  type: CLEAR_STORE\r\n});\r\n","export const ADD_NEW_ITEM = \"ADD_NEW_ITEM\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\nexport const EDIT_ITEM = \"EDIT_ITEM\";\r\nexport const CLEAR_STORE = \"CLEAR_STORE\";\r\n","import React, { PureComponent } from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Filter extends PureComponent {\r\n  handleChange = ({ target: { value } }) => {\r\n    const { onChangeFilter } = this.props;\r\n    onChangeFilter(value);\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.props;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Для поиска введите значение\"\r\n        onChange={this.handleChange}\r\n        value={filter}\r\n        className={styles.input}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filter from \"../components/Filter/\";\r\nimport { changeFilterAction } from \"../actions\";\r\n\r\nexport class FilterContainer extends Component {\r\n  render() {\r\n    return <Filter {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    filter: state.filter\r\n  }),\r\n  {\r\n    onChangeFilter: changeFilterAction\r\n  }\r\n)(FilterContainer);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport styles from \"./Item.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Item extends PureComponent {\r\n  state = {\r\n    isEdit: false,\r\n    fields: this.props.value\r\n  };\r\n\r\n  isEmptyFields = () => {\r\n    const { fields } = this.state;\r\n    const fieldValues = Object.values(fields);\r\n    for (let key in fieldValues) {\r\n      if (fieldValues[key].value === \"\") return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleClickEditButton = () => {\r\n    this.setState({\r\n      isEdit: true\r\n    });\r\n  };\r\n\r\n  handleClickDeleteButton = () => {\r\n    const { onRemoveItem, id } = this.props;\r\n    onRemoveItem(id);\r\n  };\r\n\r\n  handleClickSaveButton = () => {\r\n    const { onChangeItemValue, id } = this.props;\r\n    const { fields } = this.state;\r\n    if (this.isEmptyFields()) {\r\n      return;\r\n    } else {\r\n      onChangeItemValue({ ...fields }, id);\r\n      this.setState({\r\n        isEdit: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState(prev => ({\r\n      fields: {\r\n        ...prev.fields,\r\n        [name]: {\r\n          ...prev.fields[name],\r\n          value: value.trimStart()\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isEdit, fields } = this.state;\r\n    return (\r\n      <div className={styles.block}>\r\n        {!isEdit && (\r\n          <Fragment>\r\n            <div className={styles.textBlock}>\r\n              {Object.values(fields).map(value => (\r\n                <p key={value.name} className={styles[value.name]}>\r\n                  {value.value}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <button\r\n              className={styles.button}\r\n              onClick={this.handleClickEditButton}\r\n            >\r\n              Изменить\r\n            </button>\r\n          </Fragment>\r\n        )}\r\n        {isEdit && (\r\n          <Fragment>\r\n            <div className={styles.inputBlock}>\r\n              {Object.values(fields).map(value => (\r\n                <input\r\n                  type=\"text\"\r\n                  value={value.value}\r\n                  placeholder={value.title}\r\n                  className={styles.input}\r\n                  onChange={this.handleChange}\r\n                  name={value.name}\r\n                  key={value.name}\r\n                />\r\n              ))}\r\n            </div>\r\n            <button\r\n              onClick={this.handleClickSaveButton}\r\n              className={styles.button}\r\n            >\r\n              Сохранить\r\n            </button>\r\n          </Fragment>\r\n        )}\r\n        <button\r\n          className={styles.button}\r\n          onClick={this.handleClickDeleteButton}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  value: PropTypes.object,\r\n  onChangeItemValue: PropTypes.func,\r\n  onRemoveItem: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n","import React from \"react\";\r\nimport Item from \"./Item/\";\r\nimport styles from \"./ItemsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ItemsList = ({ itemsList, onRemoveItem, onChangeItemValue, filter }) => {\r\n  return (\r\n    <div className={styles.block}>\r\n      {itemsList.map(value =>\r\n        isViewComponent(value, filter) ? (\r\n          <Item\r\n            key={value.id}\r\n            value={value.fields}\r\n            onRemoveItem={onRemoveItem}\r\n            id={value.id}\r\n            onChangeItemValue={onChangeItemValue}\r\n          />\r\n        ) : null\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst isViewComponent = (componentsData, filter) => {\r\n  let string = \"\";\r\n  const fields = Object.values(componentsData.fields);\r\n  for (let key in fields) {\r\n    string += fields[key].value + \" \";\r\n  }\r\n  const filterWords = filter.split(\" \").filter(value => value !== \"\");\r\n  for (let key in filterWords) {\r\n    if (!string.includes(filterWords[key])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nItemsList.propTypes = {\r\n  itemsList: PropTypes.array,\r\n  onRemoveItem: PropTypes.func,\r\n  filter: PropTypes.string,\r\n  onChangeItemValue: PropTypes.func\r\n};\r\n\r\nexport default ItemsList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ItemsList from \"../components/ItemsList/\";\r\nimport { removeItemAction, changeItemValueAction } from \"../actions/\";\r\nexport class ItemsListContainer extends Component {\r\n  render() {\r\n    return <ItemsList {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    itemsList: state.itemsList,\r\n    filter: state.filter\r\n  }),\r\n  {\r\n    onRemoveItem: removeItemAction,\r\n    onChangeItemValue: changeItemValueAction\r\n  }\r\n)(ItemsListContainer);\r\n","import React from \"react\";\nimport InputContainer from \"./containers/InputContainer\";\nimport FilterContainer from \"./containers/FilterContainer\";\nimport ItemsListContainer from \"./containers/ItemsListContainer\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <InputContainer />\n      <FilterContainer />\n      <ItemsListContainer />\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n  itemsList: JSON.parse(localStorage.getItem(\"itemsList\")) || [],\r\n  filter: \"\"\r\n};\r\n","import { initialState } from \"../store/initialState\";\r\nimport {\r\n  ADD_NEW_ITEM,\r\n  REMOVE_ITEM,\r\n  CHANGE_FILTER,\r\n  EDIT_ITEM,\r\n  CLEAR_STORE\r\n} from \"../constants/actionsType\";\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case ADD_NEW_ITEM: {\r\n      const { itemsList } = state;\r\n      const newItemList = [...itemsList, { fields: payload, id: Date.now() }];\r\n      localStorage.setItem(\"itemsList\", JSON.stringify(newItemList));\r\n      return {\r\n        ...state,\r\n        itemsList: newItemList\r\n      };\r\n    }\r\n    case REMOVE_ITEM: {\r\n      const newItemList = state.itemsList.filter(value => {\r\n        return value.id !== payload;\r\n      });\r\n      localStorage.setItem(\"itemsList\", JSON.stringify(newItemList));\r\n      return {\r\n        ...state,\r\n        itemsList: newItemList\r\n      };\r\n    }\r\n    case CHANGE_FILTER: {\r\n      return { ...state, filter: payload };\r\n    }\r\n    case EDIT_ITEM: {\r\n      const newItemList = state.itemsList;\r\n      for (let key in newItemList) {\r\n        if (newItemList[key].id === payload.id) {\r\n          newItemList[key].fields = payload.value;\r\n        }\r\n      }\r\n      localStorage.setItem(\"itemsList\", JSON.stringify(newItemList));\r\n      return {\r\n        ...state,\r\n        itemsList: newItemList\r\n      };\r\n    }\r\n    case CLEAR_STORE: {\r\n      localStorage.clear();\r\n      return { ...state, itemsList: [] };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Item_block__1ITqQ\",\"textBlock\":\"Item_textBlock__1xusb\",\"inputBlock\":\"Item_inputBlock__2Y-AM\",\"button\":\"Item_button__2SOr3\",\"deleteButton\":\"Item_deleteButton__C2KqW Item_button__2SOr3\",\"input\":\"Item_input__rJcFh\",\"text\":\"Item_text__3ZK_x\",\"author\":\"Item_author__1dtM4 Item_text__3ZK_x\",\"name\":\"Item_name__1jrsJ Item_text__3ZK_x\",\"genre\":\"Item_genre__2KPBU Item_text__3ZK_x\",\"description\":\"Item_description__2QiFs Item_text__3ZK_x\"};"],"sourceRoot":""}